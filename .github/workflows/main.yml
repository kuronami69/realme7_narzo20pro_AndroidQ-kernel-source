name: Build Kernel

on:
  workflow_dispatch:
  schedule:
    # Runs every Saturday at 00:00 UTC
    - cron: "0 0 * * 6"
  push:
    branches:
      - HEAD
  pull_request:
    branches:
      - HEAD

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "2G"
      CCACHE_HARDLINK: "true"
      KERNEL_DEFCONFIG: "oppo6785_defconfig"
      KERNEL_CMDLINE: "ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- O=out"

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: "true"
        fetch-depth: 100

    - name: Set up ccache
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Install dependencies
      run: |
        sudo apt-get update -y 
        sudo apt-get install -y \
          gcc-aarch64-linux-gnu \
          gcc-arm-linux-gnueabi \
          aria2 \
          binutils \
          make \
          python3 \
          libssl-dev \
          build-essential \
          bc \
          bison \
          flex \
          unzip \
          ca-certificates \
          xz-utils \
          mkbootimg \
          cpio \
          device-tree-compiler \
          git \
          git-lfs

        # Set up custom Clang
        curl -LSs "https://raw.githubusercontent.com/rsuntk/KernelSU/main/kernel/setup.sh" | bash -s main
        aria2c -j$(nproc --all) $(curl -fsSL https://github.com/ZyCromerZ/Clang/raw/main/Clang-main-link.txt)
        mkdir zyc-clang
        tar -xzvf Clang-*.tar.gz -C zyc-clang >> /dev/null
        #module
        curl -LSs "https://raw.githubusercontent.com/kuronami69/MemKernel/main/kernel/setup.sh" | bash -s Y anrwt
        # Clone AnyKernel3
        git clone https://github.com/osm0sis/AnyKernel3
        sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
        sed -i 's!BLOCK=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!BLOCK=auto;!g' AnyKernel3/anykernel.sh
        sed -i 's/IS_SLOT_DEVICE=0;/is_slot_device=auto;/g' AnyKernel3/anykernel.sh
        rm -rf AnyKernel3/.git* AnyKernel3/README.md

    - name: GetTime
      id: get_time
      run: |
        echo "TIME=$(TZ=UTC+3 date +%s)" >> $GITHUB_OUTPUT

    - name: Build Kernel-With-KernelSU
      run: |
        export PATH=$(pwd)/zyc-clang/bin/:$PATH
        make $KERNEL_CMDLINE $KERNEL_DEFCONFIG CC="ccache clang" LD=ld.lld
        make $KERNEL_CMDLINE CC="ccache clang" LD=ld.lld -j$(nproc --all)
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3

    - name: Upload Kernel-SU
      uses: actions/upload-artifact@v4
      with:
        name: Nyan_kernel-KSU-${{ steps.get_time.outputs.TIME }}
        path: "AnyKernel3/*"
    
    - name: Upload mem module
      uses: actions/upload-artifact@v4
      with:
        name: memodule
        path: "./out/drivers/memkernel/memkernel.ko"
